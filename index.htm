<!DOCTYPE html>

<html lang="en">
<head>
    
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><span id="visitor-count">Загрузка...</span></title>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #000; /* Черный фон для полноэкранного режима */
            overflow: hidden;
        }

        /* Абсолютное позиционирование для полноэкранного видео */
        video {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover; /* Заполняем весь экран, обрезая видео, если необходимо */
            z-index: -1; /* Помещаем видео под контент (счетчик) */
        }

        /*  Стили для счетчика, чтобы был виден поверх видео */
        p {
            color: white; /* Белый текст счетчика */
            font-size: 1.5em; /* Размер шрифта */
            z-index: 10; /* Размещаем поверх видео */
        }
    </style>
</head>
<body>

    <video id="myVideo" autoplay muted playsinline loop disablePictureInPicture>
        <source src="smeshno.mp4" type="video/mp4">
        Ваш браузер не поддерживает HTML5 видео.
    </video>

    <p>Просмотров: <span id="visitor-count">Загрузка...</span></p>

    <!-- Добавляем Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-database-compat.js"></script>

    <script>
         // Блокировка контекстного меню (правой кнопки мыши)
        document.addEventListener('contextmenu', event => event.preventDefault());

        // Предотвращение использования клавиатуры для управления видео (пробел, стрелки)
        document.addEventListener('keydown', function(event) {
            // Блокируем пробел (обычно пауза/воспроизведение)
            if (event.code === 'Space') {
                event.preventDefault();
            }
            // Блокируем стрелки (обычно перемотка)
            if (event.key.startsWith('Arrow')) {
                event.preventDefault();
            }
        });

        // Блокировка событий, связанных с прогрессом видео (mousemove, seeking, и т.д.)
        const video = document.getElementById('myVideo');

        video.addEventListener('mousemove', (event) => {
            event.preventDefault(); // Предотвратить выделение текста и другие действия
        });

        video.addEventListener('seeking', (event) => {
            event.preventDefault();
            video.currentTime = video.previousTime || 0; // Возвращаемся к предыдущей позиции
        });

        video.addEventListener('seeked', (event) => {
            event.preventDefault();
            video.currentTime = video.previousTime || 0; // Возвращаемся к предыдущей позиции
        });

        video.addEventListener('pause', (event) => {
            video.play();  // Автоматически возобновляем воспроизведение
        });

        // Запоминаем предыдущую позицию воспроизведения
        video.addEventListener('timeupdate', function() {
            this.previousTime = this.currentTime;
        });
      // Конфигурация Firebase (замените своими данными)
      const firebaseConfig = {
  apiKey: "AIzaSyCLirDt-5tmT4AQnVJKiMmwvV1GjcPMBGM",
  authDomain: "funnyqrcounter.firebaseapp.com",
  projectId: "funnyqrcounter",
  storageBucket: "funnyqrcounter.firebasestorage.app",
  messagingSenderId: "1012953083960",
  appId: "1:1012953083960:web:48dd5a68d64249e59ab6cd"
};

      // Инициализация Firebase
      firebase.initializeApp(firebaseConfig);

      const db = firebase.database();
      const counterRef = db.ref("visitors"); // Ссылка на счетчик в базе данных

      function incrementCounter() {
        counterRef.transaction((currentValue) => {
          return (currentValue || 0) + 1;
        }, (error, committed, snapshot) => { // Обработчик завершения транзакции
           if (error) {
              console.log('Transaction failed abnormally!', error);
           } else if (!committed) {
              console.log('Transaction aborted by the server.');
           } else {
              console.log('Transaction committed!');
           }
        });
      }

      function displayCount() {
        counterRef.get().then((snapshot) => {
          if (snapshot.exists()) {
            document.getElementById("visitor-count").textContent = snapshot.val();
          } else {
            document.getElementById("visitor-count").textContent = "0";
            counterRef.set(0); // Устанавливаем начальное значение, если счетчик еще не создан
          }
        }).catch((error) => {
          console.error(error);
          document.getElementById("visitor-count").textContent = "Ошибка загрузки";
        });
      }

      // Вызываем функции
      incrementCounter(); // Увеличиваем счетчик при загрузке страницы
      displayCount();      // Отображаем текущее значение счетчика
</script>
</body>
</html>
